// basic idea:
// 1 introduce audience to the advantages of GPU (acceleration)
// 1.1 and why it makes sense in a VM
// 2 start with the virtualization problem space
// 2.1 isolation -> no hardware capabilities
// 2.2 emulation -> bad perf
// 2.3 paravirt -> difficult? (@c3d)
// 3 show solutions at various levels of isolation/performance
//   idea: top to bottom
// 4 emulation
// TODO
// 5 paravirt
// TODO
// 6 device assignment
// 6.1 VT-d, AMD-Vi, IOMMU setup requirements
// 6.2 QEMU, libvirt API; highlight that direct addressing isn't perfect for cloud
// 6.3 oVirt as mgmt level solution, how addressing is handled
// 6.3.1 problems with the approach, how could they be eventually solved
// 6.3.2 advantages (easy to use)
// 6.4 (or 7.3, depends on how to position it) SPICE
// 6.4.1 ???
// 7 vgpu (vfio-mdev to be vendor-agnostic) <<< moved *below* assignment since it nicely solves problems with assignment
// 7.1 hardware support, kernel vfio-mdev support
// 7.2 vfio-mdev sysfs iface
// 7.3 QEMU, libvirt API
// 7.4 oVirt: how vgpu solved issues with device assignment
// 7.5 SPICE (again, could be 7.4 - depends on how we want to structure the stack)
// 8 thx, bye, q&a

// ----------------------------------------------------------------------------
main_title_slide "Main title",
// ----------------------------------------------------------------------------
    title "Slicing GPUs (virtually!)"
    subtitle
        paragraph "How can you run GPU-accelerated workloads in guests?"
    presentation_author
        paragraph "Martin Polednik (mpolednik@redhat.com)"
        paragraph "Christophe de Dinechin (dinechin@redhat.com)"

    stepping
    picture
        translate 600, 500, 20
        rotate_z -8
        image 0, 0, 40%, 40%, "GPU.jpg"


// ----------------------------------------------------------------------------
base_slide "About the presentation authors",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Who are these two guys talking to you?"
    stepping
    left_column
        show fade_at(page_time, 1)
        paragraph
            bold "Martin Polednik"
            anchor { color "white"; texture "Martin.jpg"; circle 150, 80, 80 }
        paragraph "Software Engineer at Red Hat"
        paragraph "oVirt/RHV developer"
        paragraph "focused on hypervisor features"
        paragraph "NUMA, (v)GPU, SR-IOV, device assignment"
        paragraph {blue "https://mpolednik.github.io" }

    right_column
        show fade_at(page_time, 2)
        paragraph
            bold "Christophe de Dinechin"
            anchor { color "white"; texture "Christophe.jpg"; circle 150, 80, 80 }
        paragraph "Senior Principal Software Engineer at Red Hat"
        paragraph "Working on SPICE (remote computing)"
        paragraph "Started many open-source projects"
        paragraph "Created HP Integrity Virtual Machines"
        paragraph "Also worked on DxO ONE, HP C++ compiler, etc"
        paragraph {blue "http://c3d.github.io" }


// ----------------------------------------------------------------------------
base_slide "Use cases for GPUs",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "GPUs accelerate a number of workloads, graphical or computational"
    stepping
    story
        paragraph "Accelerate graphics rendering"
        * "Playing video games"
        * "Design and modelling software"
        * "Playing video games"
        * "Data visualization"
        * "Playing video games"
        §
        § "Accelerate parallelizable computations"
        * "Machine Learning & Artificial intelligence"
        * "Human genome"
        * "High-quality 3D rendering"

    right_picture
        translate_x -100
        rotate_image 1, "TuxRacer.jpg"
        rotate_image 2, "BlenderUI.jpg"
        rotate_image 3, "Civilization.jpg"
        // From https://www.youtube.com/watch?v=65FXDxTPTWQ
        rotate_movie 4, "movies/One billion data points-65FXDxTPTWQ.mkv##input-repeat=-1"
        rotate_image 5, "Ark Survival Evolved.jpg"
        // From https://www.youtube.com/watch?v=c0Uh5OjEinM
        rotate_movie 7, "movies/FULL Nvidia Robotaxi Presentation at GTC 2017-c0Uh5OjEinM.mkv##start-time=5485##stop-time=5525##input-repeat=-1"
        rotate_image 8, "nvbio_string_search.jpg"
        // From https://www.youtube.com/watch?v=HfGt8ZwdOF4
        rotate_movie 9, "movies/New Nvidia GTX 690 - Performance Using IRAY Renderer & 3D Studio Max 2013-HfGt8ZwdOF4.mkv##start-time=140##stop-time=260##input-repeat=-1"

star_chart ->
  locally
    SIZE -> 500
    frame_texture SIZE, SIZE,
        background_color "black"
        font "Arial", 30
        color "yellow"
        align 50%
        text_box 0, 0, SIZE, SIZE,
            vertical_align 0%
            text "Hipparcos Star Chart"
        text_box 0, 0, SIZE, SIZE,
            vertical_align 100%
            text "~15000 visible stars"
        rotatex 10
        rotatey 15 * time + 0.3 * screen_mouse_x
        cached integer (screen_mouse_y * 0.1) ,
            load_csv "stars.csv", "star"
            star Mag:real, Color:real, X:real, Y:real, Z:real ->
                color_hsv 360 * Color mod 360, screen_mouse_y * 0.0002 * Mag, 1
                point X, Y, Z, 1
            star X -> false
    rounded_rectangle 0, 0, SIZE, SIZE, 80


// ----------------------------------------------------------------------------
base_slide "How GPUs accelerate 3D graphics",
// ----------------------------------------------------------------------------
    title "How GPUs accelerate 3D graphics"
    subtitle "Widely used APIs provide standard ways to drive very complex hardware"
    graphics_api "Base"


// ----------------------------------------------------------------------------
base_slide "How GPUs accelerate 3D graphics - Data flow",
// ----------------------------------------------------------------------------
    title "How GPUs accelerate 3D graphics"
    subtitle "Data flow for GPU acceleration on bare metal (non virtualized)"
    graphics_api "Dataflow"
    picture
        at_step 1
        text_box 600, 50, 300, 300,
            style "comment"
            text "Compute acceleration uses a similar structure with different APIs"


// ----------------------------------------------------------------------------
base_slide "Why virtualize GPUs",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Increase compatibility, flexibility and scalability"
    stepping
    story
        § "Compatibility"
        * "Software development and testing"
        * "Running a game operating systems"
        §
        § "Flexibility"
        * "Video streaming, thin client, cloud gaming"
        * "Scalable management for 3D software"
        §
        § "Scalability"
        * "Deploy large GPU-accelerated workloads"
        * "Swarms of GPU-accelerated nodes"

    right_picture
        translate_x -100
        rotate_image 2, "170410-misaligned.png"
        rotate_movie 3, spice_server_movie 1
        rotate_step  5, { spice_server_and_clients }
        rotate_image 6, "openstack.png"
        rotate_step  8,
            texture "titansupercomputer.jpg"
            texture_wrap true, true
            texture_transform
                translate_x 0.32 * (1 + sin(0.13 * time))
                scale_x 1791.0/5034.0
            rectangle 700, 700
        rotate_image 9, "GPUFarm.jpg"



// ============================================================================
//
section_slide "GPU and virtualization?",
//
// ============================================================================
    title page_label
    subtitle "So many solutions to choose from..."
    stepping
    picture
        image 600, 450, 40%, 40%, "tesla.png"

import "APIs.ddd"


// ----------------------------------------------------------------------------
base_slide "Full emulation of graphics device",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Presents a VGA-class device to the guest with software rendering"
    if smooth_step < 6.5 then
        graphics_api "Emulation"
    else
        graphics_api "Emulation+VMs"
    pros
        * "Compatibility (Old)"
        ** "Old hardware"
        ** "Old software"
        * "Works at guest boot"
        * "Virt. features"
        ** "Many concurrent VMs"
        ** "Migration"
        ** "Remote access"
    cons
        * "(Very) slow"
        * "Legacy quirks"
        * "No 3D"
        * "No compositing"
        * "Modern desktops lag"
    at_step 11
    graphics_api_mark "red", "Slow"


// ----------------------------------------------------------------------------
base_slide "Paravirtualization: virtio-gpu, Virgil, GVT-s",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Intercept graphic commands in guest, perform rendering in host"
    graphics_api "Paravirt"
    pros
        * "Accelerates 2D"
        * "Some 3D"
        * "Flexible"
    cons
        * "No vendor features"
        * "Limited virt. features"
        * "Medium performance"



// ----------------------------------------------------------------------------
base_slide "Paravirtualization and multiple virtual machines",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "The difference between theory and practice is..."
    graphics_api "Paravirt+VMs"
    story
        paragraph "Difficult problems:"
        * "Rendering scheduling"
        * "Resource allocation"
        * "GPU capabilities"
        * "Migration"
        * "Remote access"


// ----------------------------------------------------------------------------
base_slide "GPU device assignment (aka pass-through)",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Assign the GPU to a single guest, poking a hole for GPU's memory mapped I/O "
    graphics_api "Passthru"
    pros
        * "Performance"
        * "Compatibility (New)"
        ** "Use vendor driver"
        ** "Latest APIs"
        * "Graphics features"
    cons
        * "Boot console"
        * "Inflexible setup"
        * "Migration?"
        * "Sharing?"


// ----------------------------------------------------------------------------
base_slide "GPU virtualization: vGPU, GVT-g, MxGPU",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Split a virtualization capable GPU between multiple guests"
    // graphics_api (if smooth_step < 3 then "vGPU" else "vGPU+VMs")
    if smooth_step < 4.5 then
        graphics_api "vGPU"
    else
        graphics_api "vGPU+VMs"
    pros
        * "Performance"
        * "Compatibility (New)"
        * "Graphics features"
        * "Multiple VMs"
    cons
        * "Medium flexibility"
        * "H/W requirements"
        * "Migration?"


// ----------------------------------------------------------------------------
base_slide "This is all very much work in progress",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Live migration of NVIDIA GPUs announced at Xen Summit 2018"
    stepping
    picture
        scale 80%
        locally
            frame_texture 1900, 1000,
                image 0, -300 + 400 * smooth_step, 100%, 100%, "LiveMigration.png"
            show fade_out_at(smooth_step, 3)
            rectangle 1900, 1000
        if smooth_step >= 2.01 then
            locally
                show fade_at(smooth_step, 3)
                // From https://www.youtube.com/watch?v=y2SkU5JODIY
                INTEL_LIVE_MIGRATION -> "movies/Intel GVT-g Live Migration Demo-y2SkU5JODIY.mp4##start-time=8"
                movie 0, 0, 200%, 200%, INTEL_LIVE_MIGRATION
                on "pageexit",
                    movie_drop INTEL_LIVE_MIGRATION
        text_box 0, 520, 1500, 150,
            style "code"
            paragraph "https://blogs.nvidia.com/blog/2018/01/04/vgpu-xenmotion-technology/"
            at_step 3
            style "story"
            paragraph "(Live migration was demoed for Intel GVT-g at Xen Summit 2016)"



// ----------------------------------------------------------------------------
base_slide "Resource allocation and sharing",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Vendors are still looking for the best approach"
    stepping
    picture
        show fade_at(page_time, 1)
        image 0, 0, 200%, 200%, "GPUComparison.png"
        at_step 1



// ============================================================================
//
section_slide "Remote access with SPICE",
//
// ============================================================================
    title page_label
    subtitle "Efficient remote access to virtual machines..."
    stepping
    picture
        translate 600, 450, 0
        rotate_z -4
        image 0, 0, 30%, 30%, "control-panel.jpg"

import "spice.ddd"



// ============================================================================
//
section_slide "Comparing the various approaches",
//
// ============================================================================
    title page_label
    subtitle "Attempting to visualize the tradeoffs..."
    stepping
    picture
        translate 600, 450, 0
        rotate_z -4
        image 0, 0, 30%, 30%, "control-panel.jpg"

import "comparisons.ddd"



// ============================================================================
//
section_slide "Virtual machine configuration",
//
// ============================================================================
    title page_label
    subtitle "Considerations about libvirt and QEMU..."
    stepping
    picture
        vm_configuration_image 0 -> image 0, 0, 30%, 30%, "tesla.png"
        vm_configuration_image 1 -> image 0, 0, 10%, 10%, "bios.png"
        vm_configuration_image 2 -> image 0, 0, 40%, 40%, "GPU Server.png"
        vm_configuration_image 3 -> image 0, 0, 30%, 30%, "Intel CPU.png"
        vm_configuration_image 4 -> image 0, 0, 25%, 25%, "Motherboard.png"
        vm_configuration_image 5 -> image 0, 0, 60%, 60%, "OldATICard.png"

        translate 600, 400, 50
        for I in 0..5 loop
            locally
                translate 200 * sin(I + time), 150 * cos(I + time*1.3), 0
                vm_configuration_image I


// ----------------------------------------------------------------------------
base_slide "Emulated & paravirtualized GPU libvirt/QEMU API",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
       paragraph "Simple to use, hard to configure:"
       at_current_step
       paragraph "Which model?"
       at_current_step
       paragraph "(for emulated models)"
       paragraph "How much (v)ram?"
       paragraph "How many heads?"
       paragraph "How many outputs?"

    picture
        code_box 300, 200, 1100, 250, "QEMU command line",
            font_size 26
            text load_text "qemucmdline-emu"
        code_box 300, -150, 1100, 250, "libvirt XML",
            font_size 26
            text load_text "emuxml"


// ----------------------------------------------------------------------------
base_slide "Emulated GPU settings",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    skip_directly_to 7
    story
      * "QXL"
      ** "vgamem = 16 MB * number_of_heads"
      ** "ram = 4 * vgamem"
      ** "vram = 2 * vgamem for RHEL-7 guest OS"
      ** "vram = 8 MB for other guest OSes"
      * "vnc/vga and vnc/cirrus:"
      ** "vram = 16 MB"
      paragraph "from https://www.ovirt.org/documentation/draft/video-ram/"


// ----------------------------------------------------------------------------
base_slide "Emulated & paravirtualized GPU management layer",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
       * "Can be present most of the time:"
       ** "convenient VM installation"
       ** "migration works, SPICE/VNC over separate network"
       ** "QXL occupies VGA region, device passthrough"
       * "What about overhead?"
       ** "total memory used by VM includes ram + vram"

       paragraph " "
       * "Only omitted for specific use-cases, such as"
       ** "headless VMs"
       ** "high performance VMs"


// ----------------------------------------------------------------------------
base_slide "Device assignment",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        * "Idea: assign the whole GPU to the VM"
        * "Not that easy, we need hardware support:"
        ** "hardware that works"
        ** "Intel VT-d and AMD-Vi"
        ** "IOMMU"
        ** "hardware quirks?"
        * "and some PCI express awareness"

    right_picture
        recorder_listing_Y -> 200 * fade_at (smooth_step, 3)
        image_only_at 1,
            image 0, 100, 130%, 130%, "meme-assign.jpg"
        image_only_at 4,
            image -150, 100, 50%, 50%, "bios.png"
        image_only_at 5 .. 6,
            code_box -300, -100, 1200, 400, "IOMMU on kernel cmdline",
                font_size 40
                paragraph "$ cat /proc/cmdline"
                paragraph "BOOT_IMAGE=/vmlinuz-3.10.0-693.11.6.el7.x86_64 root=/dev/mapper/rhel-root ro rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap rhgb quiet LANG=en_US.UTF-8 intel_iommu=on pci=realloc"
        image_only_at 5,
            line_color redhat_green1
            color redhat_green1, 20%
            line_width 2
            rectangle -730, -200, 350, 50 + 5 * cos (5 * time)
        image_only_at 6,
            line_color redhat_green1
            color redhat_green1, 20%
            line_width 2
            rectangle -410, -200, 290, 50 + 5 * cos (5 * time)

import "pcie.ddd"


// ----------------------------------------------------------------------------
base_slide "What about topology",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Some applications (ML/AI) can benefit from p2p GPU communication..."

import "topo.ddd"


// ----------------------------------------------------------------------------
base_slide "What about topology con't",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Some applications (ML/AI) can benefit from p2p GPU communication..."
    stepping
    story
        * "p2p domains for GPU memory throughput"
        * "optimization for ML/AI models"

// ----------------------------------------------------------------------------
base_slide "Device assignment API - QEMU",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        paragraph "QEMU"
        * "which device?"
        * "what about the system?"
        ** "unbind the device from the original driver"
        ** "bind it to vfio-pci"
        * "^ for every device in the IOMMU group"

    picture
        only_at 0 .. 1,
            code_box 0, 350, 1050, 200, "lspci -nnk | grep Tesla",
                font_size 20
                text load_text "lspci"
        only_at 1,
            code_box 0, -50, 950, 500, "QEMU command line",
                font_size 26
                text load_text "qemucmdline"
            line_color redhat_green1
            color redhat_green1, 20%
            line_width 2
            rectangle -155, -155, 660, 27 + 5 * cos (5 * time)
        only_at 3..4,
            code_box 400, 0, 950, 500, "vfio-pci driver_override",
                font_size 28
                text load_text "vfiopci"


// ----------------------------------------------------------------------------
base_slide "Device assignment API - libvirt",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        paragraph "libvirt"
        * "hostdev device"
        * "managed/unmanaged mode"
        * "not every device from IOMMU group needs to be assigned"

    picture
        only_at 1 .. 2,
            code_box 200, 0, 1150, 600, "hostdev XML snippet",
                font_size 26
                text load_text "vfioxml"
        only_at 2,
            line_color redhat_red1
            color redhat_red1, 20%
            line_width 2
            rectangle -20, 80, 200, 27 + 5 * cos (5 * time)


// ----------------------------------------------------------------------------
base_slide "Device assignment and management software",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        * "QEMU & libvirt API is device-centered"
        ** "assignment uses device address"
        * "bad for management layer"
        ** "host pinning"
        ** { bold "no cloud!" }
        * "GPU cannot be shared"

    right_picture
        image_only_at 3 .. 4,
            image -200, -50, 80%, 80%, "ovirt-pinning.png"
        image_only_at 5,
            image -200, 100, 90%, 90%, "cloud.png"
            picture
                line_color "#FF0000"
                line_width 15

                line_arrow -600, 400, none, 200, -50, none
                line_arrow -600, -50, none, 200, 400, none


// ----------------------------------------------------------------------------
base_slide "vfio-mdev",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        paragraph "could we solve VFIO issues?"
        * "IOMMU"
        * "assignment by address"

        at_current_step
        paragraph "Say hello to vfio-mdev!"

import "mdev.ddd"


// ----------------------------------------------------------------------------
base_slide "vfio-mdev sysfs interface",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        paragraph "each mdev-capable device"
        * "exposes several mdev types"
        ** "type description"
        ** "number of allocatable instances"
        ** "allocated instances"
        ** "creation endpoint"

    picture
        only_at 1..6,
            code_box 300, 50, 850, 650, "mdev",
                font_size 26
                text load_text "vfio-mdev"
        only_at 2,
            line_color redhat_green1
            color redhat_green1, 20%
            line_width 2
            rectangle 5, 115, 190, 40
        only_at 3,
            line_color redhat_green1
            color redhat_green1, 20%
            line_width 2
            rectangle 70, 175, 310, 40
        only_at 4,
            line_color redhat_green1
            color redhat_green1, 20%
            line_width 2
            rectangle -20, 55, 140, 40
        only_at 5,
            line_color redhat_green1
            color redhat_green1, 20%
            line_width 2
            rectangle -25, 145, 120, 40


// ----------------------------------------------------------------------------
base_slide "vfio-mdev sysfs limitations",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        paragraph "what isn't exposed?"
        at_current_step
        paragraph "vendor driver limitations"
        * "homogenous or heterogenous types?"
        * "multiple instances from single device per VM?"
        * "licensing?"
        * "anything we don't know of?"

    picture
        only_at 1..6,
            code_box 300, -50, 850, 330, "vendor hacks?",
                font_size 30
                text load_text "vendor"
            line_color redhat_red3
            color redhat_red3, 20%
            line_width 2
            rectangle 130, -140, 380, 40 + 5 * cos (5 * time)


// ----------------------------------------------------------------------------
base_slide "vfio-mdev sysfs interface cont'd",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        paragraph "mdev operations"
        * "creating mdev instance"
        * "removing mdev instance"

    picture
        only_at 1 .. 2,
            code_box -50, 0, 1100, 300, "create mdev",
                font_size 28
                text load_text "vfio-mdev-ops-create"
        only_at 2,
            code_box 150, -250, 1100, 250, "remove mdev",
                font_size 28
                text load_text "vfio-mdev-ops-delete"


// ----------------------------------------------------------------------------
base_slide "vfio-mdev in QEMU, libvirt",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        paragraph "QEMU & libvirt"
        * "both similar to plain VFIO"
        * "QEMU"
        at_current_step
        * "libvirt"
        at_current_step

    picture
        only_at 2,
            code_box 100, 0, 1200, 420, "QEMU - plain VFIO",
                font_size 26
                text load_text "qemucmdline"
        only_at 3,
            code_box 100, 0, 1200, 420, "QEMU - vfio-mdev",
                font_size 26
                text load_text "qemucmdline-mdev"
        only_at 4,
            code_box 100, 0, 1200, 420, "libvirt - plain VFIO",
                font_size 26
                text load_text "vfioxml"
        only_at 5,
            code_box 100, 0, 1200, 420, "libvirt - vfio-mdev",
                font_size 26
                text load_text "mdevxml"

// ----------------------------------------------------------------------------
base_slide "vfio-mdev and management software",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        * "VM just requests mdev type"
        * "the user is responsible for guest setup"
        * "profit"

    right_picture
        translate_x -200
        translate_y 100
        rotate_image 1, "ovirt-vgpu.png"
        rotate_image 3, "ovirt-windows.png"


// ----------------------------------------------------------------------------
base_slide "Does vfio-mdev help the management layer?",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        paragraph "So, does vfio-mdev help?"
        * "devices are addressed by a type"
        * "no IOMMU"
        * "doesn't fit use cases that require topology awareness*"
        * "few rough edges"
        * "... win!"

    right_picture
        image_only_at 5,
            image -100, 50, 90%, 90%, "cloud.png"
        image_only_at 5,
            image -100, 50, (10 * sin(page_time) + 100)%, (10 * sin(page_time) + 100)%, "ok.png"


// ----------------------------------------------------------------------------
base_slide "vfio-mdev caveat",
// ----------------------------------------------------------------------------
    title page_label
    stepping
    story
        paragraph "Cool! Where can I get mdev-capable driver?"
        at_current_step
        font_size 100
        paragraph "Ask your vendor."


// ----------------------------------------------------------------------------
section_slide "Thank you",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Now is a good time for questions"
    stepping

    picture
        translate 600, 500, 20
        rotate_z -8
        image 0, 0, 40%, 40%, "GPU.jpg"

    contents 0,
        text_box 300, -400, 600, 200,
            style "story"
            font_size 30
            anchor
                image -80, -40, 10% , 10% , "Tao3D.png"
            paragraph "This Tao3D presentation is available at"
            paragraph "https://github.com/c3d/slicinggpus-presentation"
