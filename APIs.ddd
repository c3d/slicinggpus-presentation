base_slide "Graphics APIs",
    title "Graphics API"
    subtitle "Several layers between application and hardware"
    graphics_api 0

base_slide "Graphics APIs on bare hardware",
    title "Graphics API on bare hardware"
    subtitle "Data is piped through the layers"
    graphics_api 1

base_slide "Graphics APIs with standard virtualization",
    title "Graphics API with ""standard"" virtualization"
    subtitle "Virtualize CPU and basic chipset features, but only emulates simple VGA"
    graphics_api 2
    graphics_api_mark "red", "Slow"

base_slide "Graphics API with multiple VMs",
    title "Graphics API with ""standard"" virtualization"
    subtitle "Virtualization is designed to run multiple VMs"
    graphics_api 3

base_slide "GPU device assignment",
    title "GPU device assignment"
    subtitle "Assign the GPU to a single guest"
    graphics_api 4

base_slide "VGPU - GPU virtualization",
    title "VGPU: GPU virtualization"
    subtitle "Split a virtualization capable GPU between multiple guests"
    graphics_api 5

base_slide "VirtGL",
    title "virtio-gpu - Paravirtualized GPU"
    subtitle "Split a virtualization capable GPU between multiple guests"
    graphics_api 6

base_slide "VirtGL - Multi VMs",
    title "virtio-gpu - Paravirtualized GPU"
    subtitle "Split a virtualization capable GPU between multiple guests"
    graphics_api 7


graphics_api_step -> 0.0
graphics_api N ->
    picture
        interpolate 0.05, N, graphics_api_step
        graphics_api_picture graphics_api_step

graphics_api_picture S:real ->
    image -210, -160, 60%, 60%, "rampage.png"
    image 200, -250, 20%, 20%, "NVIDIA Tesla P4Card.png"
    image 650, -200, 50%, 50%, "NEC Display.png"
    locally
        line_color "#36B600", fade_between(S, 1, 3)
        color "transparent"
        line_width 5
        rectangle -249, -285, 140, 32
        line_arrow -160, -284, arrowhead, 34, -284, arrowhead
        line_width 10
        line_arrow 400, -284, arrowhead, 534, -284, arrowhead

    locally
        show fade_at(S, 2)
        diagram_box "rgba(120,20,20,210)", 0, -100, 1000, 150 * fade_at(S,2), "Virtualization (Host kernel)"
        diagram_box "#052", -200, -125, 350, 60, "Chipset Drivers"
        locally
            show 1 - fade_between(S, 4, 5)
            diagram_box "#026", 200, -125, 350, 60, "GPU Driver"

    if S in 2.1..3.9 then
        graphics_api_VMs fade_between(S, 3, 3), 3
    else if S in 4.1..5.9 then
        graphics_api_VMs fade_between(S, 5, 5), 5
    else if S in 6.1..7.9 then
        graphics_api_VMs fade_between(S, 7, 7), 7
    else
        graphics_api_OS S
        graphics_api_app S

graphics_api_app_texture S:real ->
    rotate_time S:real ->
        if S in 1.5..3.5 then
            0.05 * integer (time * 3)
        else
            time
    frame_texture 200, 100,
        background_color "black", 20%
        light 0
        light_position 300, 300, 300
        rotate_x 40
        for I in 1..7 loop
            locally
                rotate_y (20 + 1.3 * I^3) * rotate_time S
                translate_z 10 + 6 * I
                color_hsv 80 * I + 12 * rotate_time S, 60%, 100%
                sphere 30 - 2 * I * sin(0.7 * I + rotate_time S)
    color "white"
    show fade_between(S, 1, 3) + fade_at(S, 4)

graphics_api_app S:real ->
    locally
        graphics_api_app_texture S
        ellipse 200, 260 + 120 * fade_at(S, 2), 200, 100
        locally
            color "#88C"
            translate 200, 80 + 120 * fade_at(S, 2), 15
            rotate_z -90
            arrow 0, 0, 250, 100, 44, 0.32

            color "transparent"
            line_color "#44C"
            line_width 4
            texture ""
            arrow 0, 0, 250, 100, 44, 0.32

            show fade_between(S, 4, 4)
            color "#44C"
            arrow 230 + page_time mod 1 * 75, 0, 100 + page_time mod 1 * 150, 100, 44, 0.32

        if S <> 3 and S <> 5 and S <> 7 then
            rectangle 650, -180, 280, 160

graphics_api_OS S:real ->
    locally
        translate_y 120 * fade_at(S, 2)
        diagram_box "#298", 0, 260, 1000, 150, "Application"
        diagram_box "#026", 0, 100, 1000, 150, "Graphics Environment"
        diagram_box "#A02", 0, -60, 1000, 150,
            if S < 1.5 then
                text "Kernel"
            else
                text "Guest kernel"
        translate_z 30
        diagram_box "#7A7", -200, 80, 350, 60, "Window Manager"
        diagram_box "#77A", 200, 80, 350, 60, "Graphics API"
        diagram_box "#063", -200, -85, 350, 60, "Chipset Drivers"
        if S in 1.5..3.5 then
            diagram_box "#03C", 200, -85, 350, 60, "VGA Driver"
        else if S in 5.5..7.5 then
            diagram_box "#66C", 200, -85, 350, 60, "VIRTIO GPU driver"
        else
            diagram_box "#038", 200, -85, 350, 60, "GPU driver"
        translate_z 50
        image -420, -140, 15%, 15%, "Intel CPU.png"
        image -300, -140, 12%, 12%, "Motherboard.png"
        color "white", fade_between(S, 2, 3)
        image  300, -140, 42%, 42%, "OldATICard.png"
        color "white", fade_between(graphics_api_step, 5, 5)
        image  300, -140, 12%, 12%, "NVIDIA Tesla P4Card.png"

graphics_api_VMs S:real, APIIndex:real ->
    locally
        translate -400, 55 * S, 0
        rotate_y -35 * S
        scale 100% - 25% * S
        show 100% - 0% * S
        translate 400, 0, -800 * S
        graphics_api_OS APIIndex
        translate_z 400 * S
        graphics_api_OS APIIndex
        translate_z 400 * S
        graphics_api_OS APIIndex
        graphics_api_app APIIndex
    locally
        graphics_api_app_texture APIIndex
        rectangle 650 - 30*S, -180 + 30*S, 280 - 60*S, 160 - 60*S
        color "transparent"
        texture ""
        for I in 0..2 loop
            line_color_hsv 50 * I, 80%, 80%, S
            color_hsv 50 * I, 80%, 80%, S * I * 25%
            line_width 4
            rectangle 650 - (30 - 25*I) * S, -180 + (30 - 25*I) * S, 280 - 60*S, 160 - 60*S

graphics_api_mark Color:text, Mark:text ->
    picture
        translate 400, -20, 50
        rotate_z 20
        scale 4 + sin(1.5*time)^4
        show fade_at(page_time, 5)
        color Color, 50%
        line_color Color
        font "Impact", 30
        text Mark
